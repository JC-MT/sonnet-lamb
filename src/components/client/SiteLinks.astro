---
const links = [
  { href: "/", label: "Home" },
  { href: "/about", label: "About" },
  { href: "/gallery", label: "Gallery" },
  { href: "/reels", label: "Reels" },
  { href: "/news", label: "News" },
  { href: "/contact", label: "Contact" },
];
---

<site-links>
  <ul
    data-menu
    data-active="false"
    class="transition-all md:transition-none duration-500 opacity-0 data-[active=true]:opacity-100 -z-20 md:z-0 data-[active=true]:fixed data-[active=true]:z-20 text-center pt-16 md:pt-0 absolute bg-white justify-center items-center left-0 top-0 h-screen w-screen md:h-full md:w-full md:opacity-100! md:relative! md:grid md:grid-flow-col"
  >
    {
      links.map(({ href, label }) => {
        return (
          <li>
            <a class="text-xl/[50px] md:text-sm px-2.5" href={href}>
              {label}
            </a>
          </li>
        );
      })
    }
  </ul>
  <figure
    id="menu-trigger"
    class="group relative md:hidden z-20 h-7 w-9 flex items-center px-2 cursor-pointer"
    data-active="false"
  >
    <span
      class="translate-y-[-5.5px] group-[[data-active='true']]:translate-y-0 group-[[data-active='true']]:translate-x-[3.5px] group-[[data-active='true']]:rotate-[-135deg] group-[[data-active='true']]:w-7 bg-black w-full transition-all duration-250 absolute h-[1px] top-0 left-0 bottom-0 block m-auto ease-(--ease-hamburger)"
    ></span>
    <span
      class="translate-y-[5.5px] group-[[data-active='true']]:translate-y-0 group-[[data-active='true']]:translate-x-[3.5px] group-[[data-active='true']]:rotate-[135deg] group-[[data-active='true']]:w-7 bg-black w-full transition-all duration-250 absolute h-[1px] top-0 left-0 bottom-0 block m-auto ease-(--ease-hamburger)"
    ></span>
  </figure>
</site-links>

<script>
  class SiteLinks extends HTMLElement {
    private activeMenu: boolean;
    private menu: HTMLElement | null;
    private menuTrigger: HTMLElement | null;

    constructor() {
      super();
      this.activeMenu = false;
    }

    connectedCallback() {
      this.menuTrigger = this.querySelector("#menu-trigger");
      this.menu = this.querySelector("[data-menu]");

      if (this.menuTrigger) {
        this.menuTrigger.addEventListener("click", this.toggleMenu);
      }
    }

    toggleMenu = () => {
      if (!this.menu || !this.menuTrigger) return;

      this.activeMenu = !this.activeMenu;
      this.menu.dataset.active = this.activeMenu ? "true" : "false";
      this.menuTrigger.dataset.active = this.activeMenu ? "true" : "false";
      document.body.classList.toggle("overflow-y-hidden", this.activeMenu);
    };

    disconnectedCallback() {
      if (this.menuTrigger) {
        this.menuTrigger.removeEventListener("click", this.toggleMenu);
      }
    }
  }

  customElements.define("site-links", SiteLinks);
</script>
